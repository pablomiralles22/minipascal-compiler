Grammar

    0 $accept: program $end

    1 program: PROGRAM ID LPAREN RPAREN SEMICOLON functions declarations compound_statement POINT

    2 functions: functions function SEMICOLON
    3          | %empty

    4 function: FUNCTION ID LPAREN CONST identifiers COLON type RPAREN COLON type declarations compound_statement

    5 declarations: declarations VAR identifiers COLON type SEMICOLON
    6             | declarations CONST constants SEMICOLON
    7             | %empty

    8 identifiers: ID
    9            | identifiers COMMA ID

   10 type: INTTYPE

   11 constants: ID ASSIGNOP expression
   12          | constants COMMA ID ASSIGNOP expression

   13 compound_statement: BEGINN optional_statements END
   14                   | %empty

   15 optional_statements: statements

   16 statements: statement
   17           | statements SEMICOLON statement

   18 statement: ID ASSIGNOP expression
   19          | IF expression THEN statement
   20          | IF expression THEN statement ELSE statement
   21          | WHILE expression DO statement
   22          | FOR ID ASSIGNOP expression TO expression DO statement
   23          | WRITE LPAREN print_list RPAREN
   24          | READ LPAREN read_list RPAREN
   25          | compound_statement

   26 print_list: print_item
   27           | print_list COMMA print_item

   28 print_item: expression
   29           | STRING

   30 read_list: ID
   31          | read_list COMMA ID

   32 expression: expression PLUSOP expression
   33           | expression MINUSOP expression
   34           | expression MULTOP expression
   35           | expression DIVOP expression
   36           | MINUSOP expression
   37           | LPAREN expression RPAREN
   38           | ID
   39           | INTCONST
   40           | ID LPAREN arguments RPAREN

   41 arguments: expressions
   42          | %empty

   43 expressions: expression
   44            | expressions COMMA expression


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258) 1
FUNCTION (259) 4
CONST (260) 4 6
VAR (261) 5
INTTYPE (262) 10
BEGINN (263) 13
END (264) 13
IF (265) 19 20
THEN (266) 19 20
ELSE (267) 20
WHILE (268) 21
DO (269) 21 22
FOR (270) 22
TO (271) 22
WRITE (272) 23
READ (273) 24
ID (274) 1 4 8 9 11 12 18 22 30 31 38 40
INTCONST (275) 39
STRING (276) 29
LPAREN (277) 1 4 23 24 37 40
RPAREN (278) 1 4 23 24 37 40
SEMICOLON (279) 1 2 5 6 17
COLON (280) 4 5
COMMA (281) 9 12 27 31 44
POINT (282) 1
ASSIGNOP (283) 11 12 18 22
PLUSOP (284) 32
MINUSOP (285) 33 36
MULTOP (286) 34
DIVOP (287) 35


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
functions (35)
    on left: 2 3, on right: 1 2
function (36)
    on left: 4, on right: 2
declarations (37)
    on left: 5 6 7, on right: 1 4 5 6
identifiers (38)
    on left: 8 9, on right: 4 5 9
type (39)
    on left: 10, on right: 4 5
constants (40)
    on left: 11 12, on right: 6 12
compound_statement (41)
    on left: 13 14, on right: 1 4 25
optional_statements (42)
    on left: 15, on right: 13
statements (43)
    on left: 16 17, on right: 15 17
statement (44)
    on left: 18 19 20 21 22 23 24 25, on right: 16 17 19 20 21 22
print_list (45)
    on left: 26 27, on right: 23 27
print_item (46)
    on left: 28 29, on right: 26 27
read_list (47)
    on left: 30 31, on right: 24 31
expression (48)
    on left: 32 33 34 35 36 37 38 39 40, on right: 11 12 18 19 20 21
    22 28 32 33 34 35 36 37 43 44
arguments (49)
    on left: 41 42, on right: 40
expressions (50)
    on left: 43 44, on right: 41 44


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM . ID LPAREN RPAREN SEMICOLON functions declarations compound_statement POINT

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM ID . LPAREN RPAREN SEMICOLON functions declarations compound_statement POINT

    LPAREN  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: PROGRAM ID LPAREN . RPAREN SEMICOLON functions declarations compound_statement POINT

    RPAREN  shift, and go to state 6


State 6

    1 program: PROGRAM ID LPAREN RPAREN . SEMICOLON functions declarations compound_statement POINT

    SEMICOLON  shift, and go to state 7


State 7

    1 program: PROGRAM ID LPAREN RPAREN SEMICOLON . functions declarations compound_statement POINT

    $default  reduce using rule 3 (functions)

    functions  go to state 8


State 8

    1 program: PROGRAM ID LPAREN RPAREN SEMICOLON functions . declarations compound_statement POINT
    2 functions: functions . function SEMICOLON

    FUNCTION  shift, and go to state 9

    $default  reduce using rule 7 (declarations)

    function      go to state 10
    declarations  go to state 11


State 9

    4 function: FUNCTION . ID LPAREN CONST identifiers COLON type RPAREN COLON type declarations compound_statement

    ID  shift, and go to state 12


State 10

    2 functions: functions function . SEMICOLON

    SEMICOLON  shift, and go to state 13


State 11

    1 program: PROGRAM ID LPAREN RPAREN SEMICOLON functions declarations . compound_statement POINT
    5 declarations: declarations . VAR identifiers COLON type SEMICOLON
    6             | declarations . CONST constants SEMICOLON

    CONST   shift, and go to state 14
    VAR     shift, and go to state 15
    BEGINN  shift, and go to state 16

    $default  reduce using rule 14 (compound_statement)

    compound_statement  go to state 17


State 12

    4 function: FUNCTION ID . LPAREN CONST identifiers COLON type RPAREN COLON type declarations compound_statement

    LPAREN  shift, and go to state 18


State 13

    2 functions: functions function SEMICOLON .

    $default  reduce using rule 2 (functions)


State 14

    6 declarations: declarations CONST . constants SEMICOLON

    ID  shift, and go to state 19

    constants  go to state 20


State 15

    5 declarations: declarations VAR . identifiers COLON type SEMICOLON

    ID  shift, and go to state 21

    identifiers  go to state 22


State 16

   13 compound_statement: BEGINN . optional_statements END

    BEGINN  shift, and go to state 16
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    WRITE   shift, and go to state 26
    READ    shift, and go to state 27
    ID      shift, and go to state 28

    $default  reduce using rule 14 (compound_statement)

    compound_statement   go to state 29
    optional_statements  go to state 30
    statements           go to state 31
    statement            go to state 32


State 17

    1 program: PROGRAM ID LPAREN RPAREN SEMICOLON functions declarations compound_statement . POINT

    POINT  shift, and go to state 33


State 18

    4 function: FUNCTION ID LPAREN . CONST identifiers COLON type RPAREN COLON type declarations compound_statement

    CONST  shift, and go to state 34


State 19

   11 constants: ID . ASSIGNOP expression

    ASSIGNOP  shift, and go to state 35


State 20

    6 declarations: declarations CONST constants . SEMICOLON
   12 constants: constants . COMMA ID ASSIGNOP expression

    SEMICOLON  shift, and go to state 36
    COMMA      shift, and go to state 37


State 21

    8 identifiers: ID .

    $default  reduce using rule 8 (identifiers)


State 22

    5 declarations: declarations VAR identifiers . COLON type SEMICOLON
    9 identifiers: identifiers . COMMA ID

    COLON  shift, and go to state 38
    COMMA  shift, and go to state 39


State 23

   19 statement: IF . expression THEN statement
   20          | IF . expression THEN statement ELSE statement

    ID        shift, and go to state 40
    INTCONST  shift, and go to state 41
    LPAREN    shift, and go to state 42
    MINUSOP   shift, and go to state 43

    expression  go to state 44


State 24

   21 statement: WHILE . expression DO statement

    ID        shift, and go to state 40
    INTCONST  shift, and go to state 41
    LPAREN    shift, and go to state 42
    MINUSOP   shift, and go to state 43

    expression  go to state 45


State 25

   22 statement: FOR . ID ASSIGNOP expression TO expression DO statement

    ID  shift, and go to state 46


State 26

   23 statement: WRITE . LPAREN print_list RPAREN

    LPAREN  shift, and go to state 47


State 27

   24 statement: READ . LPAREN read_list RPAREN

    LPAREN  shift, and go to state 48


State 28

   18 statement: ID . ASSIGNOP expression

    ASSIGNOP  shift, and go to state 49


State 29

   25 statement: compound_statement .

    $default  reduce using rule 25 (statement)


State 30

   13 compound_statement: BEGINN optional_statements . END

    END  shift, and go to state 50


State 31

   15 optional_statements: statements .
   17 statements: statements . SEMICOLON statement

    SEMICOLON  shift, and go to state 51

    $default  reduce using rule 15 (optional_statements)


State 32

   16 statements: statement .

    $default  reduce using rule 16 (statements)


State 33

    1 program: PROGRAM ID LPAREN RPAREN SEMICOLON functions declarations compound_statement POINT .

    $default  reduce using rule 1 (program)


State 34

    4 function: FUNCTION ID LPAREN CONST . identifiers COLON type RPAREN COLON type declarations compound_statement

    ID  shift, and go to state 21

    identifiers  go to state 52


State 35

   11 constants: ID ASSIGNOP . expression

    ID        shift, and go to state 40
    INTCONST  shift, and go to state 41
    LPAREN    shift, and go to state 42
    MINUSOP   shift, and go to state 43

    expression  go to state 53


State 36

    6 declarations: declarations CONST constants SEMICOLON .

    $default  reduce using rule 6 (declarations)


State 37

   12 constants: constants COMMA . ID ASSIGNOP expression

    ID  shift, and go to state 54


State 38

    5 declarations: declarations VAR identifiers COLON . type SEMICOLON

    INTTYPE  shift, and go to state 55

    type  go to state 56


State 39

    9 identifiers: identifiers COMMA . ID

    ID  shift, and go to state 57


State 40

   38 expression: ID .
   40           | ID . LPAREN arguments RPAREN

    LPAREN  shift, and go to state 58

    $default  reduce using rule 38 (expression)


State 41

   39 expression: INTCONST .

    $default  reduce using rule 39 (expression)


State 42

   37 expression: LPAREN . expression RPAREN

    ID        shift, and go to state 40
    INTCONST  shift, and go to state 41
    LPAREN    shift, and go to state 42
    MINUSOP   shift, and go to state 43

    expression  go to state 59


State 43

   36 expression: MINUSOP . expression

    ID        shift, and go to state 40
    INTCONST  shift, and go to state 41
    LPAREN    shift, and go to state 42
    MINUSOP   shift, and go to state 43

    expression  go to state 60


State 44

   19 statement: IF expression . THEN statement
   20          | IF expression . THEN statement ELSE statement
   32 expression: expression . PLUSOP expression
   33           | expression . MINUSOP expression
   34           | expression . MULTOP expression
   35           | expression . DIVOP expression

    THEN     shift, and go to state 61
    PLUSOP   shift, and go to state 62
    MINUSOP  shift, and go to state 63
    MULTOP   shift, and go to state 64
    DIVOP    shift, and go to state 65


State 45

   21 statement: WHILE expression . DO statement
   32 expression: expression . PLUSOP expression
   33           | expression . MINUSOP expression
   34           | expression . MULTOP expression
   35           | expression . DIVOP expression

    DO       shift, and go to state 66
    PLUSOP   shift, and go to state 62
    MINUSOP  shift, and go to state 63
    MULTOP   shift, and go to state 64
    DIVOP    shift, and go to state 65


State 46

   22 statement: FOR ID . ASSIGNOP expression TO expression DO statement

    ASSIGNOP  shift, and go to state 67


State 47

   23 statement: WRITE LPAREN . print_list RPAREN

    ID        shift, and go to state 40
    INTCONST  shift, and go to state 41
    STRING    shift, and go to state 68
    LPAREN    shift, and go to state 42
    MINUSOP   shift, and go to state 43

    print_list  go to state 69
    print_item  go to state 70
    expression  go to state 71


State 48

   24 statement: READ LPAREN . read_list RPAREN

    ID  shift, and go to state 72

    read_list  go to state 73


State 49

   18 statement: ID ASSIGNOP . expression

    ID        shift, and go to state 40
    INTCONST  shift, and go to state 41
    LPAREN    shift, and go to state 42
    MINUSOP   shift, and go to state 43

    expression  go to state 74


State 50

   13 compound_statement: BEGINN optional_statements END .

    $default  reduce using rule 13 (compound_statement)


State 51

   17 statements: statements SEMICOLON . statement

    BEGINN  shift, and go to state 16
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    WRITE   shift, and go to state 26
    READ    shift, and go to state 27
    ID      shift, and go to state 28

    $default  reduce using rule 14 (compound_statement)

    compound_statement  go to state 29
    statement           go to state 75


State 52

    4 function: FUNCTION ID LPAREN CONST identifiers . COLON type RPAREN COLON type declarations compound_statement
    9 identifiers: identifiers . COMMA ID

    COLON  shift, and go to state 76
    COMMA  shift, and go to state 39


State 53

   11 constants: ID ASSIGNOP expression .
   32 expression: expression . PLUSOP expression
   33           | expression . MINUSOP expression
   34           | expression . MULTOP expression
   35           | expression . DIVOP expression

    PLUSOP   shift, and go to state 62
    MINUSOP  shift, and go to state 63
    MULTOP   shift, and go to state 64
    DIVOP    shift, and go to state 65

    $default  reduce using rule 11 (constants)


State 54

   12 constants: constants COMMA ID . ASSIGNOP expression

    ASSIGNOP  shift, and go to state 77


State 55

   10 type: INTTYPE .

    $default  reduce using rule 10 (type)


State 56

    5 declarations: declarations VAR identifiers COLON type . SEMICOLON

    SEMICOLON  shift, and go to state 78


State 57

    9 identifiers: identifiers COMMA ID .

    $default  reduce using rule 9 (identifiers)


State 58

   40 expression: ID LPAREN . arguments RPAREN

    ID        shift, and go to state 40
    INTCONST  shift, and go to state 41
    LPAREN    shift, and go to state 42
    MINUSOP   shift, and go to state 43

    $default  reduce using rule 42 (arguments)

    expression   go to state 79
    arguments    go to state 80
    expressions  go to state 81


State 59

   32 expression: expression . PLUSOP expression
   33           | expression . MINUSOP expression
   34           | expression . MULTOP expression
   35           | expression . DIVOP expression
   37           | LPAREN expression . RPAREN

    RPAREN   shift, and go to state 82
    PLUSOP   shift, and go to state 62
    MINUSOP  shift, and go to state 63
    MULTOP   shift, and go to state 64
    DIVOP    shift, and go to state 65


State 60

   32 expression: expression . PLUSOP expression
   33           | expression . MINUSOP expression
   34           | expression . MULTOP expression
   35           | expression . DIVOP expression
   36           | MINUSOP expression .

    MULTOP  shift, and go to state 64
    DIVOP   shift, and go to state 65

    $default  reduce using rule 36 (expression)


State 61

   19 statement: IF expression THEN . statement
   20          | IF expression THEN . statement ELSE statement

    BEGINN  shift, and go to state 16
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    WRITE   shift, and go to state 26
    READ    shift, and go to state 27
    ID      shift, and go to state 28

    $default  reduce using rule 14 (compound_statement)

    compound_statement  go to state 29
    statement           go to state 83


State 62

   32 expression: expression PLUSOP . expression

    ID        shift, and go to state 40
    INTCONST  shift, and go to state 41
    LPAREN    shift, and go to state 42
    MINUSOP   shift, and go to state 43

    expression  go to state 84


State 63

   33 expression: expression MINUSOP . expression

    ID        shift, and go to state 40
    INTCONST  shift, and go to state 41
    LPAREN    shift, and go to state 42
    MINUSOP   shift, and go to state 43

    expression  go to state 85


State 64

   34 expression: expression MULTOP . expression

    ID        shift, and go to state 40
    INTCONST  shift, and go to state 41
    LPAREN    shift, and go to state 42
    MINUSOP   shift, and go to state 43

    expression  go to state 86


State 65

   35 expression: expression DIVOP . expression

    ID        shift, and go to state 40
    INTCONST  shift, and go to state 41
    LPAREN    shift, and go to state 42
    MINUSOP   shift, and go to state 43

    expression  go to state 87


State 66

   21 statement: WHILE expression DO . statement

    BEGINN  shift, and go to state 16
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    WRITE   shift, and go to state 26
    READ    shift, and go to state 27
    ID      shift, and go to state 28

    $default  reduce using rule 14 (compound_statement)

    compound_statement  go to state 29
    statement           go to state 88


State 67

   22 statement: FOR ID ASSIGNOP . expression TO expression DO statement

    ID        shift, and go to state 40
    INTCONST  shift, and go to state 41
    LPAREN    shift, and go to state 42
    MINUSOP   shift, and go to state 43

    expression  go to state 89


State 68

   29 print_item: STRING .

    $default  reduce using rule 29 (print_item)


State 69

   23 statement: WRITE LPAREN print_list . RPAREN
   27 print_list: print_list . COMMA print_item

    RPAREN  shift, and go to state 90
    COMMA   shift, and go to state 91


State 70

   26 print_list: print_item .

    $default  reduce using rule 26 (print_list)


State 71

   28 print_item: expression .
   32 expression: expression . PLUSOP expression
   33           | expression . MINUSOP expression
   34           | expression . MULTOP expression
   35           | expression . DIVOP expression

    PLUSOP   shift, and go to state 62
    MINUSOP  shift, and go to state 63
    MULTOP   shift, and go to state 64
    DIVOP    shift, and go to state 65

    $default  reduce using rule 28 (print_item)


State 72

   30 read_list: ID .

    $default  reduce using rule 30 (read_list)


State 73

   24 statement: READ LPAREN read_list . RPAREN
   31 read_list: read_list . COMMA ID

    RPAREN  shift, and go to state 92
    COMMA   shift, and go to state 93


State 74

   18 statement: ID ASSIGNOP expression .
   32 expression: expression . PLUSOP expression
   33           | expression . MINUSOP expression
   34           | expression . MULTOP expression
   35           | expression . DIVOP expression

    PLUSOP   shift, and go to state 62
    MINUSOP  shift, and go to state 63
    MULTOP   shift, and go to state 64
    DIVOP    shift, and go to state 65

    $default  reduce using rule 18 (statement)


State 75

   17 statements: statements SEMICOLON statement .

    $default  reduce using rule 17 (statements)


State 76

    4 function: FUNCTION ID LPAREN CONST identifiers COLON . type RPAREN COLON type declarations compound_statement

    INTTYPE  shift, and go to state 55

    type  go to state 94


State 77

   12 constants: constants COMMA ID ASSIGNOP . expression

    ID        shift, and go to state 40
    INTCONST  shift, and go to state 41
    LPAREN    shift, and go to state 42
    MINUSOP   shift, and go to state 43

    expression  go to state 95


State 78

    5 declarations: declarations VAR identifiers COLON type SEMICOLON .

    $default  reduce using rule 5 (declarations)


State 79

   32 expression: expression . PLUSOP expression
   33           | expression . MINUSOP expression
   34           | expression . MULTOP expression
   35           | expression . DIVOP expression
   43 expressions: expression .

    PLUSOP   shift, and go to state 62
    MINUSOP  shift, and go to state 63
    MULTOP   shift, and go to state 64
    DIVOP    shift, and go to state 65

    $default  reduce using rule 43 (expressions)


State 80

   40 expression: ID LPAREN arguments . RPAREN

    RPAREN  shift, and go to state 96


State 81

   41 arguments: expressions .
   44 expressions: expressions . COMMA expression

    COMMA  shift, and go to state 97

    $default  reduce using rule 41 (arguments)


State 82

   37 expression: LPAREN expression RPAREN .

    $default  reduce using rule 37 (expression)


State 83

   19 statement: IF expression THEN statement .
   20          | IF expression THEN statement . ELSE statement

    ELSE  shift, and go to state 98

    $default  reduce using rule 19 (statement)


State 84

   32 expression: expression . PLUSOP expression
   32           | expression PLUSOP expression .
   33           | expression . MINUSOP expression
   34           | expression . MULTOP expression
   35           | expression . DIVOP expression

    MULTOP  shift, and go to state 64
    DIVOP   shift, and go to state 65

    $default  reduce using rule 32 (expression)


State 85

   32 expression: expression . PLUSOP expression
   33           | expression . MINUSOP expression
   33           | expression MINUSOP expression .
   34           | expression . MULTOP expression
   35           | expression . DIVOP expression

    MULTOP  shift, and go to state 64
    DIVOP   shift, and go to state 65

    $default  reduce using rule 33 (expression)


State 86

   32 expression: expression . PLUSOP expression
   33           | expression . MINUSOP expression
   34           | expression . MULTOP expression
   34           | expression MULTOP expression .
   35           | expression . DIVOP expression

    $default  reduce using rule 34 (expression)


State 87

   32 expression: expression . PLUSOP expression
   33           | expression . MINUSOP expression
   34           | expression . MULTOP expression
   35           | expression . DIVOP expression
   35           | expression DIVOP expression .

    $default  reduce using rule 35 (expression)


State 88

   21 statement: WHILE expression DO statement .

    $default  reduce using rule 21 (statement)


State 89

   22 statement: FOR ID ASSIGNOP expression . TO expression DO statement
   32 expression: expression . PLUSOP expression
   33           | expression . MINUSOP expression
   34           | expression . MULTOP expression
   35           | expression . DIVOP expression

    TO       shift, and go to state 99
    PLUSOP   shift, and go to state 62
    MINUSOP  shift, and go to state 63
    MULTOP   shift, and go to state 64
    DIVOP    shift, and go to state 65


State 90

   23 statement: WRITE LPAREN print_list RPAREN .

    $default  reduce using rule 23 (statement)


State 91

   27 print_list: print_list COMMA . print_item

    ID        shift, and go to state 40
    INTCONST  shift, and go to state 41
    STRING    shift, and go to state 68
    LPAREN    shift, and go to state 42
    MINUSOP   shift, and go to state 43

    print_item  go to state 100
    expression  go to state 71


State 92

   24 statement: READ LPAREN read_list RPAREN .

    $default  reduce using rule 24 (statement)


State 93

   31 read_list: read_list COMMA . ID

    ID  shift, and go to state 101


State 94

    4 function: FUNCTION ID LPAREN CONST identifiers COLON type . RPAREN COLON type declarations compound_statement

    RPAREN  shift, and go to state 102


State 95

   12 constants: constants COMMA ID ASSIGNOP expression .
   32 expression: expression . PLUSOP expression
   33           | expression . MINUSOP expression
   34           | expression . MULTOP expression
   35           | expression . DIVOP expression

    PLUSOP   shift, and go to state 62
    MINUSOP  shift, and go to state 63
    MULTOP   shift, and go to state 64
    DIVOP    shift, and go to state 65

    $default  reduce using rule 12 (constants)


State 96

   40 expression: ID LPAREN arguments RPAREN .

    $default  reduce using rule 40 (expression)


State 97

   44 expressions: expressions COMMA . expression

    ID        shift, and go to state 40
    INTCONST  shift, and go to state 41
    LPAREN    shift, and go to state 42
    MINUSOP   shift, and go to state 43

    expression  go to state 103


State 98

   20 statement: IF expression THEN statement ELSE . statement

    BEGINN  shift, and go to state 16
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    WRITE   shift, and go to state 26
    READ    shift, and go to state 27
    ID      shift, and go to state 28

    $default  reduce using rule 14 (compound_statement)

    compound_statement  go to state 29
    statement           go to state 104


State 99

   22 statement: FOR ID ASSIGNOP expression TO . expression DO statement

    ID        shift, and go to state 40
    INTCONST  shift, and go to state 41
    LPAREN    shift, and go to state 42
    MINUSOP   shift, and go to state 43

    expression  go to state 105


State 100

   27 print_list: print_list COMMA print_item .

    $default  reduce using rule 27 (print_list)


State 101

   31 read_list: read_list COMMA ID .

    $default  reduce using rule 31 (read_list)


State 102

    4 function: FUNCTION ID LPAREN CONST identifiers COLON type RPAREN . COLON type declarations compound_statement

    COLON  shift, and go to state 106


State 103

   32 expression: expression . PLUSOP expression
   33           | expression . MINUSOP expression
   34           | expression . MULTOP expression
   35           | expression . DIVOP expression
   44 expressions: expressions COMMA expression .

    PLUSOP   shift, and go to state 62
    MINUSOP  shift, and go to state 63
    MULTOP   shift, and go to state 64
    DIVOP    shift, and go to state 65

    $default  reduce using rule 44 (expressions)


State 104

   20 statement: IF expression THEN statement ELSE statement .

    $default  reduce using rule 20 (statement)


State 105

   22 statement: FOR ID ASSIGNOP expression TO expression . DO statement
   32 expression: expression . PLUSOP expression
   33           | expression . MINUSOP expression
   34           | expression . MULTOP expression
   35           | expression . DIVOP expression

    DO       shift, and go to state 107
    PLUSOP   shift, and go to state 62
    MINUSOP  shift, and go to state 63
    MULTOP   shift, and go to state 64
    DIVOP    shift, and go to state 65


State 106

    4 function: FUNCTION ID LPAREN CONST identifiers COLON type RPAREN COLON . type declarations compound_statement

    INTTYPE  shift, and go to state 55

    type  go to state 108


State 107

   22 statement: FOR ID ASSIGNOP expression TO expression DO . statement

    BEGINN  shift, and go to state 16
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    WRITE   shift, and go to state 26
    READ    shift, and go to state 27
    ID      shift, and go to state 28

    $default  reduce using rule 14 (compound_statement)

    compound_statement  go to state 29
    statement           go to state 109


State 108

    4 function: FUNCTION ID LPAREN CONST identifiers COLON type RPAREN COLON type . declarations compound_statement

    $default  reduce using rule 7 (declarations)

    declarations  go to state 110


State 109

   22 statement: FOR ID ASSIGNOP expression TO expression DO statement .

    $default  reduce using rule 22 (statement)


State 110

    4 function: FUNCTION ID LPAREN CONST identifiers COLON type RPAREN COLON type declarations . compound_statement
    5 declarations: declarations . VAR identifiers COLON type SEMICOLON
    6             | declarations . CONST constants SEMICOLON

    CONST   shift, and go to state 14
    VAR     shift, and go to state 15
    BEGINN  shift, and go to state 16

    $default  reduce using rule 14 (compound_statement)

    compound_statement  go to state 111


State 111

    4 function: FUNCTION ID LPAREN CONST identifiers COLON type RPAREN COLON type declarations compound_statement .

    $default  reduce using rule 4 (function)
